#include "pid.h"

void PIDController_init(PIDController *pid){


    pid -> out = 0.0f;
    pid -> integ = 0.0f;
    pid -> diff = 0.0f;
    pid -> preverr = 0.0f;
    pid -> prevmeas = 0.0f;


}


PIDController_update(PIDController *pid, float setpoint, float measurment){


    float error = setpoint - measurment; //error

    float porp = pid -> Kp*error; //proportional


    pid->integ = pid->integ + pid -> Ki * error;//integral

    if (pid->max < proportional){
    
        pid->limMaxInt = pid->max - proportional;
    
    } 


    if (pid->integ > pid->limMaxInt){
        
        pid->integ = pid->limMaxInt;

    } else if (pid->integ < pid->limMinInt){
    
        pid->integ = pid->limMinInt;
    
    }

    //diff

    pid->diff = pid->Kd * (error - pid->preverr);


    pid->out = prop + pid -> integ + pid -> diff;

    if (pid->out > pid->limMax){
    
        pid->out = pid->limMax;
    
    } else if (pid->out < pid->limMin){
    
        pid->out = pid->limMin;

    }


    pid->preverr = error;
    pid->prevmeas = measurment;


}

